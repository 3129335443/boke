jQuery对象就是通过jQuery包装DOM对象后产生的对象。
jQuery对象是jQuery独有的。如果一个对象是jQuery对象，那么就可以使用jQuery里的方。


jq对象对象转换
$.get(0)||$[0]
$(document.getELementById("id"));

jq选择器
jq基本选择器

$("#qwe");
$(".class");
$("h1");
$("h1,p,.class");
$("*");


层次选择器
f:父元素。。z:子元素。。t:同级元素

$("f z");
$("f>z");
$("f~");
$("f+");


过滤选择器?

$("t:eq(1)");
$("t:gt(2)");
$("t:lt(2)");
$("t:first");
$("t:last");
$("t:not");

$("t:odd");
$("t:event");
$("t:animeted");
$("t:focus");
$("t:header");

内容选择器

$("t:contains()");
$("t:empty");
$("t:has()");
$("t:parent");

可见性过滤

$("t:hidden");
$("t:visible");
对visible：hidden  属性不起作用
高度宽度为零有用
display有用
type=hidden



属性过滤器

$("t:[type=button]");
$("t:[class*=red]");
$("t:[class^=green]");
$("t:[class$=white]");
$("t:[class!=red]");
$("t:[class*=red][class!=green]");



子元素

$("t:nth-child(1)");
$("t:first-child");
$("t:last-child");
$("t:only-child");



表单元素过滤

$("t:enabled");
$("t:disabled");
$("t:checked");
$("t:selected");


表单元素选择(几乎所有)
$("input");
$("text");
$("password");
$("radio");
$("checkedbox");
$("submit");
$(""image);
$("button");
$("file");
$("reset");
$("hidden");


JQ中的DOM操作

一、内部插入
$("a").append("span")
$("a").appendTo($("div"))
$("a").prepend("span");
$("a").prependTo($("span"))


二、外部插入
$("a").after("sapan");
$("a").before("span");
$("a").insertBefore($("div"))
$("a").insertAfter($("div"));


三、包裹
$("a").wrap("<div>");
$("a").wrapAll("<div>")
$("a").unwrap("div")


四、替换
$("a").replaceWith("span");
$("a").replaceAll($("p"))


五、删除
$("a").remove();
$("a").empty();
var xx = $("a").detach();

六、复制
$("a").clone(true)



一、属性（01属性操作.html ）
$("a").attr("href");
$("a").removeAttr("href");

二、CSS样式操作( 02样式操作.html )
$("a").css({width:"100px"});
$("a").addClass("red");
$("a").removeClass("red");

$("a").taggleClass("red");
$("a").hasClass("red");


三、HTML代码、文本、值
$("a").text();
$("a").val();
$("a").html();



一、位置
1）、offset() 方法设置或返回被选元素相对于文档的偏移坐标。
$("p").offset().top/$("p").offset({top:"100px"});

position() 方法返回第一个匹配元素的位置（相对于它的父元素）。
$("p").position().top/$("p").position({top:"100px"});


设置或返回被选元素的垂直滚动条位置位置是 0。
scrollTop()
scrollLeft()


二、尺寸
width()
innerWidth()
outerWidth()

height()
innerHeight()
outerHeight



二、常用事件
表单事件
$("input").focus();
$("input").blur();
$("input").change();
$("input").select();

鼠标事件
$("div").mouseenter();
$("div").mouseleave();
$("div").mouseover();
$("div").mouseout();
$("div").mousedown();
$("div").mouseup();


window事件
$("window").resize();
$("window").scroll();
$("div").mousemove();
event.pageX 属性返回鼠标指针的位置，相对于文档的左边缘。

键盘事件
$("window").keydown();
$("window").keyup();



合成事件
$("div").hover(function(){},function(){});
$("div").taggle(time,line,function,function,..);     显示/隐藏


event.type该属性作用是获取到事件的类型
event.data---传递给事件对象的额外数据
event.target---获取到触发事件的元素

4）、event.preventDefault()方法 阻止默认的事件行为。
5）、event.stopPropagation()方法 阻止事件冒泡。
6）、event.pageX和event.pageY

return fase;阻止默认的事件行为和阻止事件冒泡。


添加/删除

$("p").on("click","span","this a span",function(){})
$("p").off("click","select",functionName)

模拟操作(主动操作)
$("p").tiggle("dbclick");
简写为
$("p").dbclick();


JQ动画
显示隐藏
$("p").show();
$("p").hide();
$("p").taggle();

上下滑动
$("p").slideDown();
$("p").slideUp();
$("p").slideTaggle();


淡入淡出
$("p").fadeIn（);
$("p").fadeOut();
$("p").fadeTo();
$("p").fadeTaggle();



动画
$("p").animete({},1000,"swing",function(){});
停止动画
$("p").stop(true,true);
$("p").finish();

延时
$("p").delay(1000)

表单设置
类似checked，selected，disabled等表单元素的状态，最好使用.prop()方法
prop("checked");
prop("checked",true);


jQuery.ajax()函数的settings对象中，
常用的属性有：
url、type、async、data、dataType、success
、error、complete、beforeSend、timeout等。


beforeSend	Function类型
指定在请求发送前需要执行的回调函数。
该函数还有两个参数：其一是jqXHR对象，其二是当前settings对象。这是一个Ajax事件，
如果该函数返回false，将取消本次ajax请求。



dataType	String类型
默认值：jQuery智能猜测，猜测范围(xml、 json、 script或html)
指定返回的数据类型。该属性值可以为：
'xml' :返回XML文档，可使用jQuery进行处理。
'html': 返回HTML字符串。
'script': 返回JavaScript代码。不会自动缓存结果。除非设置了cache参数。注意：在远程请求时(不在同一个域下)，所有POST请求都将转为GET请求。(因为将使用DOM的script标签来加载)
'json': 返回JSON数据。JSON数据将使用严格的语法进行解析(属性名必须加双引号，所有字符串也必须用双引号)，如果解析失败将抛出一个错误。从jQuery 1.9开始，空内容的响应将返回null或{}。
'jsonp': JSONP格式。使用JSONP形式调用函数时，如"url?callback=?"，jQuery将自动替换第二个?为正确的函数名，以执行回调函数。
'text': 返回纯文本字符串。
error



async
Boolean类型
默认值：true。
指示是否是异步请求。


data任意类型
发送到服务器的数据，它将被自动转为字符串类型。如果是GET请求，它将被附加到URL后面。


error	Function/Array类型
指定请求失败时执行的回调函数。该函数有3个参数：jqXHR对象、 
请求状态字符串(null、 'timeout'、 'error'、 'abort'和'parsererror')、
 错误信息字符串(响应状态的文本描述部分，例如'Not Found'或'Internal Server Error')。
这是一个Ajax事件。跨域脚本和跨域JSONP请求不会调用该函数。



headersObject类型1.5 新增
默认值：{}。
以对象形式指定附加的请求头信息



jsonp	String类型
重写JSONP请求的回调函数名称。该值用于替代"url?callback=?"中的"callback"部分。


success    Function/Array类型
指定请求成功后执行的回调函数。该函数有3个参数：请求返回的数据、响应状态字符串、jqXHR对象。
从jQuery 1.5开始，该属性值可以是数组形式的多个函数，每个函数都将被回调执行。


timeoutNumber类型
设置请求超时的毫秒值。



jQuery.get(url, data, success, dataType);
jQuery.post( url [, data ] [, success ] [, type ] )
jQuery.getJSON( url [, data ] [, success ] )








